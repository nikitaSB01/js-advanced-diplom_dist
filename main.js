(()=>{"use strict";function e(e,t){const s=e<t,a=e>=t*(t-1),i=e%t==0,l=e%t==t-1,r={"top-left":s&&i,"top-right":s&&l,"bottom-left":a&&i,"bottom-right":a&&l,top:s&&!(i||l),bottom:a&&!(i||l),left:i&&!(s||a),right:l&&!(s||a)};for(const e in r)if(r[e])return e;return"center"}class t{constructor(){this.boardSize=8,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[]}bindToDOM(e){if(!(e instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=e}drawUi(t){this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="action-restart" class="btn">New Game</button>\n        <button data-id="action-save" class="btn">Save Game</button>\n        <button data-id="action-load" class="btn">Load Game</button>\n      </div>\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n    ',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",(e=>this.onNewGameClick(e))),this.saveGameEl.addEventListener("click",(e=>this.onSaveGameClick(e))),this.loadGameEl.addEventListener("click",(e=>this.onLoadGameClick(e))),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(t);for(let t=0;t<this.boardSize**2;t+=1){const s=document.createElement("div");s.classList.add("cell","map-tile",`map-tile-${e(t,this.boardSize)}`),s.addEventListener("mouseenter",(e=>this.onCellEnter(e))),s.addEventListener("mouseleave",(e=>this.onCellLeave(e))),s.addEventListener("click",(e=>this.onCellClick(e))),this.boardEl.appendChild(s)}this.cells=Array.from(this.boardEl.children)}redrawPositions(e){for(const e of this.cells)e.innerHTML="";for(const s of e){const e=this.boardEl.children[s.position],a=document.createElement("div");a.classList.add("character",s.character.type);const i=document.createElement("div");i.classList.add("health-level");const l=document.createElement("div");l.classList.add("health-level-indicator","health-level-indicator-"+((t=s.character.health)<15?"critical":t<50?"normal":"high")),l.style.width=`${s.character.health}%`,i.appendChild(l),a.appendChild(i),e.appendChild(a)}var t}addCellEnterListener(e){this.cellEnterListeners.push(e)}addCellLeaveListener(e){this.cellLeaveListeners.push(e)}addCellClickListener(e){this.cellClickListeners.push(e)}addNewGameListener(e){this.newGameListeners.push(e)}addSaveGameListener(e){this.saveGameListeners.push(e)}addLoadGameListener(e){this.loadGameListeners.push(e)}onCellEnter(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellEnterListeners.forEach((e=>e.call(null,t)))}onCellLeave(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellLeaveListeners.forEach((e=>e.call(null,t)))}onCellClick(e){const t=this.cells.indexOf(e.currentTarget);this.cellClickListeners.forEach((e=>e.call(null,t)))}onNewGameClick(e){e.preventDefault(),this.newGameListeners.forEach((e=>e.call(null)))}onSaveGameClick(e){e.preventDefault(),this.saveGameListeners.forEach((e=>e.call(null)))}onLoadGameClick(e){e.preventDefault(),this.loadGameListeners.forEach((e=>e.call(null)))}static showError(e){alert(e)}static showMessage(e){alert(e)}selectCell(e,t="yellow"){this.deselectCell(e),this.cells[e].classList.add("selected",`selected-${t}`)}deselectCell(e){const t=this.cells[e];t.classList.remove(...Array.from(t.classList).filter((e=>e.startsWith("selected"))))}showCellTooltip(e,t){this.cells[t].title=e}hideCellTooltip(e){this.cells[e].title=""}showDamage(e,t){return new Promise((s=>{const a=this.cells[e],i=document.createElement("span");i.textContent=t,i.classList.add("damage"),a.appendChild(i),i.addEventListener("animationend",(()=>{a.removeChild(i),s()}))}))}setCursor(e){this.boardEl.style.cursor=e}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}}const s="prairie",a="desert",i="arctic",l="mountain";class r{constructor(e,t="generic"){if(this.level=e,this.attack=0,this.defence=0,this.health=50,this.type=t,"Character"===new.target.name)throw new Error("Нельзя создать данный класс")}}class n{constructor(e,t){if(!(e instanceof r))throw new Error("character must be instance of Character or its children");if("number"!=typeof t)throw new Error("position must be a number");this.character=e,this.position=t}}class h extends r{constructor(e,t="bowman"){super(e,t),this.attack=25,this.defence=25}}class o extends r{constructor(e,t="swordsman"){super(e,t),this.attack=40,this.defence=10}}class c extends r{constructor(e,t="magician"){super(e,t),this.attack=10,this.defence=40}}class d extends r{constructor(e,t="vampire"){super(e,t),this.attack=25,this.defence=25}}class m extends r{constructor(e,t="daemon"){super(e,t),this.attack=10,this.defence=10}}class y extends r{constructor(e,t="undead"){super(e,t),this.attack=40,this.defence=10}}class p{constructor(e){this.characters=e}addCharacter(e){this.characters.push(e)}}class u{static from(e){const t={swordsman:o,bowman:h,magician:c,daemon:m,undead:y,vampire:d},s=e=>{const s=t[e.type];if(!s)throw new Error("Неизвестный тип");const a=new s(e.level);return a.health=e.health,a.attack=e.attack,a.defence=e.defence,a.health=e.health,a.type=e.type,a},a=new p,i=e.positionsUser.map((e=>{const t=s(e.character);return Array.isArray(a.characters)||(a.characters=[]),a.addCharacter(t),new n(t,e.position)})),l=new p,r=e.positionsBot.map((e=>{const t=s(e.character);return Array.isArray(l.characters)||(l.characters=[]),l.addCharacter(t),new n(t,e.position)})),f=new u;return f.userTeam=a,f.botTeam=l,f.positionsUser=i,f.positionsBot=r,f.isPlayer=!0,f.level=e.level,f.theme=e.theme,f}}function f(e,t,s){const a=function*(e,t){for(;;){const s=Math.ceil(Math.random()*t),a=new(e[Math.floor(Math.random()*e.length)]);a.level=s,yield a}}(e,t),i=[];for(let e=0;e<s;e+=1){const e=a.next().value;i.push(e)}return new p(i)}function g(e,t,s,a,i){const l=Math.abs(Math.floor(t/a)-Math.floor(s/a)),r=Math.abs(t%a-s%a);if("move"===i){let t;switch(e){case"swordsman":case"undead":t=4;break;case"bowman":case"vampire":t=2;break;case"magician":case"daemon":t=1;break;default:return console.log("Выбран неверный тип игрока"),!1}return l<=t&&r<=t&&(0===l||0===r||l===r)}if("attack"===i){let t;switch(e){case"swordsman":case"undead":t=1;break;case"bowman":case"vampire":t=2;break;case"magician":case"daemon":t=4;break;default:return console.log("Выбран неверный тип злыдня"),!1}return l<=t&&r<=t}return!1}const C=new t;C.bindToDOM(document.querySelector("#game-container"));const v=new class{constructor(e){this.storage=e}save(e){this.storage.setItem("state",JSON.stringify(e))}load(){try{return JSON.parse(this.storage.getItem("state"))}catch(e){throw new Error("Invalid state")}}}(localStorage),P=new class{constructor(e,t){this.gamePlay=e,this.stateService=t,this.fieldSize=this.gamePlay.boardSize,this.gameOver=!1,this.onCellClick=this.onCellClick.bind(this),this.onCellEnter=this.onCellEnter.bind(this),this.onCellLeave=this.onCellLeave.bind(this),this.addEvents()}init(){this.theme=s,this.level=1,this.gamePlay.drawUi(this.theme),this.playerPositions=this.generatePositions("playerTeam"),this.enemyPositions=this.generatePositions("enemyTeam"),this.playerTeam=f([h,o,c],this.level,3),this.positionedPlayerTeam=this.createPositionedTeam(this.playerTeam,this.playerPositions),this.enemyTeam=f([d,y,m],this.level,1),this.positionedEnemyTeam=this.createPositionedTeam(this.enemyTeam,this.enemyPositions),this.allChars=[...this.positionedPlayerTeam,...this.positionedEnemyTeam],this.gamePlay.redrawPositions(this.allChars),this.gameState={positionsUser:this.positionedPlayerTeam,positionsBot:this.positionedEnemyTeam,isPlayer:!0,level:this.level,theme:this.theme},console.log("Initialized state:",this.state)}generatePositions(e){const t=[];for(let s=0;s<this.fieldSize**2;s+=1){const a=s%this.fieldSize;"playerTeam"===e&&a<=1&&t.push(s),"enemyTeam"===e&&a>=this.fieldSize-2&&t.push(s)}return t}createPositionedTeam(e,t){const s=[];return e.characters.forEach((e=>{const a=Math.floor(Math.random()*t.length),i=t[a],l=new n(e,i);s.push(l),t.splice(a,1)})),s}addEvents(){this.gamePlay.addCellEnterListener(this.onCellEnter),this.gamePlay.addCellClickListener(this.onCellClick),this.gamePlay.addCellLeaveListener(this.onCellLeave),this.gamePlay.addNewGameListener((()=>this.newGame())),this.gamePlay.addSaveGameListener((()=>this.saveGame())),this.gamePlay.addLoadGameListener((()=>this.loadGame()))}checkPlayerChar(e){if(!e)return console.log("Character is missing");const t=e.character.type;return"bowman"===t||"swordsman"===t||"magician"===t}calcDamage(e,t){const s=e.character.attack,a=s-t.character.defence,i=Math.max(a,.1*s);return Math.floor(i)}onCellClick(e){if(this.gameOver)return;const s=this.gamePlay.cells[e].querySelector(".character");if(this.clickedChar=this.allChars.find((t=>t.position===e)),this.enteredCell.classList.contains("selected-green"))return void this.playerStep(e);if(this.enteredCell.classList.contains("selected-red"))return void this.playerAttack(e);const a=this.checkPlayerChar(this.clickedChar);s&&a?(this.gamePlay.cells.forEach(((e,t)=>this.gamePlay.deselectCell(t))),this.gamePlay.selectCell(e),this.activeChar=this.clickedChar,this.activeIndex=e):(t.showMessage("Вы не выбрали персонажа или делаете недоступный Вам ход"),this.gamePlay.cells.forEach(((e,t)=>this.gamePlay.deselectCell(t))),this.clickedChar=null)}playerStep(e){console.log("запуск playerStep"),this.activeChar.position=e,this.gamePlay.redrawPositions(this.allChars),this.gamePlay.cells.forEach(((e,t)=>this.gamePlay.deselectCell(t))),this.clickedChar=null,this.gameState.isPlayer=!1,this.compAct()}playerAttack(e){console.log("запуск playerAttack");const t=this.allChars.find((t=>t.position===e)),s=this.calcDamage(this.activeChar,t);this.gamePlay.showDamage(e,s).then((()=>{t.character.health-=s,t.character.health<=0&&(this.positionedEnemyTeam=this.positionedEnemyTeam.filter((e=>e!==t)),this.allChars=[...this.positionedPlayerTeam,...this.positionedEnemyTeam],0===this.positionedEnemyTeam.length)?this.levelUp():(this.gamePlay.redrawPositions(this.allChars),this.gamePlay.cells.forEach(((e,t)=>this.gamePlay.deselectCell(t))),this.clickedChar=null,this.activeChar=null,this.gameState.isPlayer=!1,this.compAct())}))}compAct(){if(console.log("запуск compAct"),!this.gameState.isPlayer){let e=null,t=null,s=-1/0;const a=this.positionedPlayerTeam.map((e=>e.position));for(const i of this.positionedEnemyTeam)for(const l of a)if(g(i.character.type,i.position,l,this.fieldSize,"attack")){const a=this.allChars.find((e=>e.position===l)),r=this.calcDamage(i,a);r>s&&(s=r,e=l,t=i)}null!==e?this.enemyAttack(e,t):this.gameOver||this.moveRandomEnemy()}}enemyAttack(e,t){console.log("запуск enemyAttack");const s=this.allChars.find((t=>t.position===e)),a=this.calcDamage(t,s);this.gamePlay.showDamage(e,a).then((()=>{if(s.character.health-=a,s.character.health<=0&&(this.positionedPlayerTeam=this.positionedPlayerTeam.filter((e=>e!==s)),this.allChars=[...this.positionedPlayerTeam,...this.positionedEnemyTeam],0===this.positionedPlayerTeam.length))return this.finishGame(),void this.winOrOver("поражение");this.gamePlay.redrawPositions(this.allChars),this.gameState.isPlayer=!0}))}moveRandomEnemy(){console.log("запуск moveRandomEnemy");const e=this.positionedEnemyTeam[Math.floor(Math.random()*this.positionedEnemyTeam.length)],t=this.findNearestHero(e.position),s=[];for(let t=0;t<this.fieldSize*this.fieldSize;t+=1)g(e.character.type,e.position,t,this.fieldSize,"move")&&s.push(t);const a=this.allChars.map((e=>e.position)),i=s.filter((e=>!a.includes(e)));let l=1/0,r=null;for(const e of i){const s=this.calculateDistance(e,t);s<l&&(l=s,r=e)}e.position=r,this.gamePlay.redrawPositions(this.allChars)}findNearestHero(e){let t=null,s=1/0;for(const a of this.positionedPlayerTeam){const i=this.calculateDistance(e,a.position);i<s&&(s=i,t=a.position)}return t}calculateDistance(e,t){const s=Math.floor(e/this.fieldSize),a=e%this.fieldSize,i=Math.floor(t/this.fieldSize),l=t%this.fieldSize;return Math.abs(s-i)+Math.abs(a-l)}createMessage(e){return`🎖 ${e.level} ⚔ ${e.attack} 🛡 ${e.defence} ❤ ${e.health}`}levelUp(){switch(console.log("---LEVEL UP---"),this.level+=1,this.level){case 2:this.theme=a;break;case 3:this.theme=i;break;case 4:this.theme=l;break;case 5:return this.finishGame(),void this.winOrOver("победа");default:this.theme=s}this.gamePlay.drawUi(this.theme);for(const e of this.positionedPlayerTeam){const{health:t,attack:s,defence:a}=e.character;e.character.health=Math.floor(Math.min(t+80,100)),e.character.attack=Math.floor(Math.max(s,s*(80+t)/100)),e.character.defence=Math.floor(Math.max(a,a*(80+t)/100)),e.character.level=this.level}this.playerTeam.characters=this.playerTeam.characters.filter((e=>e.health>0)),this.positionedPlayerTeam=this.createPositionedTeam(this.playerTeam,this.playerPositions),this.enemyTeam=f([d,y,m],this.level,1),this.enemyPositions=this.generatePositions("enemyTeam"),this.positionedEnemyTeam=this.createPositionedTeam(this.enemyTeam,this.enemyPositions);for(const e of this.positionedEnemyTeam)if(e.character.level===this.level){const{health:t,attack:s,defence:a}=e.character;e.character.health=100,e.character.attack=Math.floor(Math.max(s,s*(80+t)/100)),e.character.defence=Math.floor(Math.max(a,a*(80+t)/100))}this.allChars=[...this.positionedPlayerTeam,...this.positionedEnemyTeam],this.gamePlay.redrawPositions(this.allChars),this.settingsDef(),this.gameState={positionsUser:this.positionedPlayerTeam,positionsBot:this.positionedEnemyTeam,isPlayer:!0,level:this.level,theme:this.theme}}onCellEnter(e){if(this.gameOver)return;const t=this.gamePlay.cells[e].querySelector(".character");if(this.enteredCell=this.gamePlay.cells[e],t){this.enteredChar=this.allChars.find((t=>t.position===e));const t=this.createMessage(this.enteredChar.character);this.gamePlay.showCellTooltip(t,e),this.gamePlay.setCursor("pointer")}if(this.gamePlay.cells[e].classList.contains("selected")||t||this.gamePlay.setCursor("default"),this.clickedChar&&!t&&(g(this.clickedChar.character.type,this.clickedChar.position,e,this.fieldSize,"move")?(this.gamePlay.selectCell(e,"green"),this.gamePlay.setCursor("pointer")):this.gamePlay.setCursor("not-allowed")),this.clickedChar&&t){if(this.checkPlayerChar(this.enteredChar))return;g(this.clickedChar.character.type,this.clickedChar.position,e,this.fieldSize,"attack")?(this.gamePlay.selectCell(e,"red"),this.gamePlay.setCursor("crosshair")):this.gamePlay.setCursor("not-allowed")}}onCellLeave(e){this.gameOver||(this.gamePlay.hideCellTooltip(e),this.gamePlay.cells[e].classList.contains("selected-yellow")||this.gamePlay.deselectCell(e))}settingsDef(){this.activeChar=null,this.activeIndex=null,this.clickedChar=null,this.enteredCell=null,this.gamePlay.cells.forEach(((e,t)=>this.gamePlay.deselectCell(t)))}finishGame(){this.gameOver=!0,this.settingsDef(),this.gamePlay.setCursor("default"),this.gamePlay.redrawPositions(this.allChars)}winOrOver(e){"победа"===e?setTimeout((()=>{t.showMessage("Вы выиграли!")}),100):setTimeout((()=>{t.showMessage("Вы проиграли!")}),100)}newGame(){this.gameOver=!1,this.settingsDef(),this.init()}saveGame(){this.stateService.save(this.gameState),t.showMessage("Игра сохранена")}loadGame(){const e=this.stateService.load();e?(this.gameState=u.from(e),console.log("loadGame.gameState ===>",this.gameState),this.allChars=[...this.gameState.positionsUser,...this.gameState.positionsBot],this.playerTeam=this.gameState.userTeam,this.enemyTeam=this.gameState.botTeam,this.positionedEnemyTeam=this.gameState.positionsBot,this.positionedPlayerTeam=this.gameState.positionsUser,this.level=this.gameState.level,this.theme=this.gameState.theme,this.gamePlay.drawUi(this.theme),this.gamePlay.redrawPositions(this.allChars),this.gamePlay.setCursor("default")):t.showMessage("Нет сохраненных игр")}}(C,v);P.init()})();
//# sourceMappingURL=main.js.map